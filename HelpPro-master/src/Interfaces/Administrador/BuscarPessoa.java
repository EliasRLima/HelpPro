/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package interfaces.Administrador;

import Analista.Analista;
import Cliente.Cliente;
import Dao.DaoAdministrador;
import Dao.DaoAnalista;
import Dao.DaoCliente;
import Dao.DaoNivel;
import Dao.DaoPessoa;
import Pessoa.Pessoa;
import administrador.Administrador;
import javax.swing.JOptionPane;

/**
 *
 * @author root
 */
public class BuscarPessoa extends javax.swing.JInternalFrame {

    /**
     * Creates new form BuscarPessoa
     */
    String funcao;
    public BuscarPessoa() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane4 = new javax.swing.JScrollPane();
        txtFuncao = new javax.swing.JTextPane();
        lbMULT = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        txtNome = new javax.swing.JTextPane();
        jLabel3 = new javax.swing.JLabel();
        jScrollPane5 = new javax.swing.JScrollPane();
        txtnvExperiencia = new javax.swing.JTextPane();
        jScrollPane2 = new javax.swing.JScrollPane();
        txtData = new javax.swing.JTextPane();
        jLabel4 = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        jScrollPane3 = new javax.swing.JScrollPane();
        txtSexo = new javax.swing.JTextPane();
        jButton1 = new javax.swing.JButton();
        jLabel5 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        lblAvaliacao = new javax.swing.JLabel();
        txtAvaliacao = new javax.swing.JTextField();
        txtCPF = new javax.swing.JFormattedTextField();
        btRemover = new javax.swing.JButton();

        setClosable(true);
        setIconifiable(true);
        setResizable(true);

        txtFuncao.setFocusable(false);
        jScrollPane4.setViewportView(txtFuncao);

        lbMULT.setText("Nível de experiência:");

        txtNome.setFocusable(false);
        jScrollPane1.setViewportView(txtNome);

        jLabel3.setText("Data de nascimento:");

        txtnvExperiencia.setFocusable(false);
        jScrollPane5.setViewportView(txtnvExperiencia);

        txtData.setFocusable(false);
        jScrollPane2.setViewportView(txtData);

        jLabel4.setText("Sexo:");

        jLabel1.setText("CPF:");

        txtSexo.setFocusable(false);
        jScrollPane3.setViewportView(txtSexo);

        jButton1.setText("Buscar");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jLabel5.setText("Função:");

        jLabel2.setText("Nome:");

        lblAvaliacao.setText("Avaliacao:");

        txtAvaliacao.setFocusable(false);

        try {
            txtCPF.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.MaskFormatter("###.###.###-##")));
        } catch (java.text.ParseException ex) {
            ex.printStackTrace();
        }

        btRemover.setText("Remover");
        btRemover.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btRemoverActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel1)
                    .addComponent(jButton1)
                    .addComponent(txtCPF, javax.swing.GroupLayout.PREFERRED_SIZE, 176, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(95, 95, 95)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(lblAvaliacao)
                    .addComponent(lbMULT)
                    .addComponent(jLabel5)
                    .addComponent(jLabel4)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 329, Short.MAX_VALUE)
                    .addComponent(jLabel2)
                    .addComponent(jLabel3)
                    .addComponent(jScrollPane2)
                    .addComponent(jScrollPane3)
                    .addComponent(jScrollPane4)
                    .addComponent(jScrollPane5)
                    .addComponent(txtAvaliacao))
                .addContainerGap(38, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(btRemover, javax.swing.GroupLayout.PREFERRED_SIZE, 141, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(140, 140, 140))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(jLabel2))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtCPF, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jButton1)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel3)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel4)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(12, 12, 12)
                .addComponent(jLabel5)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(lbMULT)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(lblAvaliacao)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(txtAvaliacao, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(28, 28, 28)
                .addComponent(btRemover, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(72, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        //buscar
        String CPF = txtCPF.getText();
        CPF = CPF.replace(".", "");
        CPF = CPF.replace("-", "");
        DaoPessoa dp = new DaoPessoa();
        if(dp.estaConectado()){
             Pessoa pessoa = dp.getPessoa(CPF);
             if(pessoa != null){
                 txtNome.setText(pessoa.getNome());
             txtData.setText(pessoa.getDt_nasc());
             String sexo = "indefinido";
             if(pessoa.getSexo() == 1){
                 sexo = "Feminino";
             }
             else if(pessoa.getSexo() == 2){
                 sexo = "Masculino";
             }
             txtSexo.setText(sexo);
             if(pessoa.getTipo_papel() == 1){//administrador
                 DaoAdministrador da = new DaoAdministrador();
                 if(da.estaConectado()){
                     Administrador admin = da.getAdmin(dp.getId(CPF));
                     this.funcao = "Administrador";
                     txtFuncao.setText(this.funcao);
                     lbMULT.setText("Hierarquia:");
                     int hierarquia = admin.getNivel_hierarquia();
                     if(hierarquia == 1){
                         txtnvExperiencia.setText("ADMINISTRADOR");
                     }
                     else if(hierarquia == 2){
                         txtnvExperiencia.setText("Admin. CHEFE");
                     }
                     lblAvaliacao.setVisible(false);
                     txtAvaliacao.setVisible(false);
                     
                 }
             }
             else if(pessoa.getTipo_papel() == 2){//analista
                 DaoAnalista da = new DaoAnalista();
                 if(da.estaConectado()){
                     Analista analista = da.getAnalista(dp.getId(CPF));
                     this.funcao = "Analista";
                     txtFuncao.setText(this.funcao);
                     lbMULT.setText("Anos de serviço:");
                     txtnvExperiencia.setText(""+analista.getAnos_svc());
                     lblAvaliacao.setVisible(true);
                     lblAvaliacao.setText("Avaliação:");
                     txtAvaliacao.setVisible(true);
                     txtAvaliacao.setText(analista.getAvaliacao()+"%");
                 }
             }else if(pessoa.getTipo_papel() == 3){
                 DaoCliente dc = new DaoCliente();
                 if(dc.estaConectado()){
                     Cliente cliente = dc.getCliente(dp.getId(CPF));
                     funcao = "Cliente";
                     txtFuncao.setText(this.funcao);
                     lbMULT.setText("Nivel de experiencia:");
                     DaoNivel dN = new DaoNivel(); dN.estaConectado();
                     txtnvExperiencia.setText(dN.getNome(cliente.getNvl_exp()));
                     lblAvaliacao.setVisible(true);
                     lblAvaliacao.setText("Numero de chamados:");
                     txtAvaliacao.setVisible(true);
                     txtAvaliacao.setText(cliente.getChamados_num()+"");
                 }
             }
             }else{
                 JOptionPane.showMessageDialog(null, "Nenhum localizado!","AVISO", 3);
             }
        }
    }//GEN-LAST:event_jButton1ActionPerformed

    private void btRemoverActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btRemoverActionPerformed
        //remover
        try{
            String CPF = txtCPF.getText().replace("-", "");
            CPF = CPF.replace(".", "");
            Pessoa pessoa = new Pessoa(txtNome.getText(), CPF);
            if(this.funcao=="Cliente"){
                DaoCliente dC = new DaoCliente();
                if(dC.estaConectado()){
                    Cliente cliente = new Cliente();
                    cliente.setPessoa(pessoa);
                    if(dC.removerCliente(cliente)){
                        JOptionPane.showMessageDialog(null,pessoa.getNome()+" foi removido(a) permanentemente.","REMOVIDO", 3);
                        Limpar();
                    }else{
                        JOptionPane.showMessageDialog(null,"Não removido!","Falha",3);
                    }
                }else{
                    JOptionPane.showMessageDialog(null,"Não conectado!","Falha",3);
                }
            }else if(this.funcao=="Analista"){
                DaoAnalista dA = new DaoAnalista();
                if(dA.estaConectado()){
                    Analista analista = new Analista();
                    analista.setPessoa(pessoa);
                    if(dA.removerAnalista(analista)){
                        JOptionPane.showMessageDialog(null,pessoa.getNome()+" foi removido(a) permanentemente.","REMOVIDO", 3);
                        Limpar();
                    }else{
                        JOptionPane.showMessageDialog(null,"Não removido!","Falha",3);
                    }
                }else{
                    JOptionPane.showMessageDialog(null,"Não conectado!","Falha",3);
                }
            }else if(this.funcao=="Administrador"){
                DaoAdministrador dA = new DaoAdministrador();
                if(dA.estaConectado()){
                    Administrador admin = new Administrador();
                    admin.setPessoa(pessoa);
                    if(dA.removerAdmin(admin)){
                        JOptionPane.showMessageDialog(null,pessoa.getNome()+" foi removido(a) permanentemente.","REMOVIDO", 3);
                        Limpar();
                    }
                else{
                        JOptionPane.showMessageDialog(null,"Não removido!","Falha",3);
                    }
                }else{
                    JOptionPane.showMessageDialog(null,"Não conectado!","Falha",3);
                }
            }else{
                JOptionPane.showMessageDialog(null,"Responsabilidade aqui, suas ações são permanentes! Funcao:"+this.funcao,"ATENÇÃO", 3);
            }
        }
        catch(Exception e){
            JOptionPane.showMessageDialog(null,"Erro: "+e.getMessage(),"FALHA AO TENTAR REMOVER", 3);
        }

    }//GEN-LAST:event_btRemoverActionPerformed
    
    private void Limpar(){
        txtNome.setText("");
        txtCPF.setText("");
        txtData.setText("");
        txtFuncao.setText("");
        txtnvExperiencia.setText("");
        txtSexo.setText("");
        txtAvaliacao.setText("");
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btRemover;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JScrollPane jScrollPane5;
    private javax.swing.JLabel lbMULT;
    private javax.swing.JLabel lblAvaliacao;
    private javax.swing.JTextField txtAvaliacao;
    private javax.swing.JFormattedTextField txtCPF;
    private javax.swing.JTextPane txtData;
    private javax.swing.JTextPane txtFuncao;
    private javax.swing.JTextPane txtNome;
    private javax.swing.JTextPane txtSexo;
    private javax.swing.JTextPane txtnvExperiencia;
    // End of variables declaration//GEN-END:variables
}
