/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package interfaces.Administrador;

import Analista.Analista;
import Cliente.Cliente;
import Dao.DaoAdministrador;
import Dao.DaoAnalista;
import Dao.DaoCliente;
import Dao.DaoPessoa;
import Pessoa.Pessoa;
import administrador.Administrador;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.JPasswordField;

/**
 *
 * @author root//concertar
 */
public class RemoverPessoa extends javax.swing.JInternalFrame {

    /**
     * Creates new form RemoverPessoa
     */
    public RemoverPessoa() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        lb1 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        txtNome = new javax.swing.JTextPane();
        jLabel1 = new javax.swing.JLabel();
        btRestaurar = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();
        jScrollPane5 = new javax.swing.JScrollPane();
        txt1 = new javax.swing.JTextPane();
        jScrollPane3 = new javax.swing.JScrollPane();
        txtSexo = new javax.swing.JTextPane();
        lb2 = new javax.swing.JLabel();
        btRemover = new javax.swing.JButton();
        jLabel5 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jScrollPane4 = new javax.swing.JScrollPane();
        txtFuncao = new javax.swing.JTextPane();
        jLabel4 = new javax.swing.JLabel();
        jScrollPane6 = new javax.swing.JScrollPane();
        txt2 = new javax.swing.JTextPane();
        txtCPF = new javax.swing.JFormattedTextField();
        txtData = new javax.swing.JFormattedTextField();

        setClosable(true);
        setIconifiable(true);

        lb1.setText("Nível de experiência:");

        jScrollPane1.setViewportView(txtNome);

        jLabel1.setText("CPF:");

        btRestaurar.setText("Restaurar");
        btRestaurar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btRestaurarActionPerformed(evt);
            }
        });

        jLabel3.setText("Data de nascimento:");

        jScrollPane5.setViewportView(txt1);

        jScrollPane3.setViewportView(txtSexo);

        lb2.setText("Anos de serviço:");

        btRemover.setText("Remover");
        btRemover.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btRemoverActionPerformed(evt);
            }
        });

        jLabel5.setText("Função:");

        jLabel2.setText("Nome:");

        jScrollPane4.setViewportView(txtFuncao);

        jLabel4.setText("Sexo:");

        jScrollPane6.setViewportView(txt2);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel1)
                    .addComponent(btRemover)
                    .addComponent(txtCPF, javax.swing.GroupLayout.PREFERRED_SIZE, 176, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(95, 95, 95)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(lb2)
                    .addComponent(lb1)
                    .addComponent(jLabel5)
                    .addComponent(jLabel4)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 329, Short.MAX_VALUE)
                    .addComponent(jLabel2)
                    .addComponent(jLabel3)
                    .addComponent(jScrollPane3)
                    .addComponent(jScrollPane4)
                    .addComponent(jScrollPane5)
                    .addComponent(jScrollPane6)
                    .addComponent(txtData))
                .addContainerGap(55, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(btRestaurar)
                .addGap(166, 166, 166))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(jLabel2))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtCPF, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btRemover)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel3)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtData, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(9, 9, 9)
                .addComponent(jLabel4)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(12, 12, 12)
                .addComponent(jLabel5)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(lb1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(lb2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(btRestaurar)
                .addContainerGap(63, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btRemoverActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btRemoverActionPerformed
        //remover
        try{
            DaoPessoa dp = new DaoPessoa();           
            if(dp.estaConectado()){
                String cpf = txtCPF.getText().replace("-","");
                cpf = cpf.replace(".","");
               
                Pessoa pessoa = dp.getPessoa(cpf);
                if(pessoa.getTipo_papel() == 1){//administrador
                  JOptionPane.showMessageDialog(null,"1","REMOVER",3);
                 DaoAdministrador da = new DaoAdministrador();
                 if(da.estaConectado()){
                     Administrador admin = da.getAdmin(dp.getId(cpf));
                     if(da.removerAdmin(admin)){
                         txtFuncao.setText("Administrador");
                         lb1.setText("Hierarquia:");
                         int hierarquia = admin.getNivel_hierarquia();
                     if(hierarquia == 1){
                         txt1.setText("ADMINISTRADOR");
                     }
                     else if(hierarquia == 2){
                         txt1.setText("Admin. CHEFE");
                     }
                     lb2.setVisible(false);
                     txt2.setVisible(false);
                     }
                     JOptionPane.showMessageDialog(null,"Removido com sucesso!","REMOVER",3);
                 }
             }
             else if(pessoa.getTipo_papel() == 2){//analista
                 JOptionPane.showMessageDialog(null,"2","REMOVER",3);
                 DaoAnalista dan = new DaoAnalista();
                 if(dan.estaConectado()){
                     JOptionPane.showMessageDialog(null,"3","REMOVER",3);
                     Analista analista = dan.getAnalista(dp.getId(cpf));
                     analista.setPessoa(pessoa);
                     if(dan.removerAnalista(analista)){
                         txtFuncao.setText("Analista");
                        lb1.setText("Anos de serviço:");
                         txt1.setText(""+analista.getAnos_svc());
                        lb2.setVisible(true);
                        lb2.setText("Avaliação:");
                        txt2.setVisible(true);
                        txt2.setText(analista.getAvaliacao()+"%");
                        JOptionPane.showMessageDialog(null,"Removido com sucesso!","REMOVER",3);
                     }
                     else{
                         JOptionPane.showMessageDialog(null,"4","REMOVER",3);
                     }
                 }
             }
             else if(pessoa.getTipo_papel() == 3){
                 JOptionPane.showMessageDialog(null,"3","REMOVER",3);
                 DaoCliente dc = new DaoCliente();
                 if(dc.estaConectado()){
                     Cliente cliente = dc.getCliente(dp.getId(cpf));
                     if(dc.removerCliente(cliente)){
                         txtFuncao.setText("Cliente");
                        lb1.setText("Nivel de experiencia:");
                        txt1.setText(""+cliente.getNvl_exp());//trocar por string quando NIVEL estiver implementado e preenchido
                        lb2.setVisible(true);
                        lb2.setText("Numero de chamados:");
                        txt2.setVisible(true);
                        txt2.setText(cliente.getChamados_num()+"%");
                        JOptionPane.showMessageDialog(null,"Removido com sucesso","REMOVER",3);
                     }
                 }
             }
                }
            }
        catch(Exception e){
            JOptionPane.showMessageDialog(null,"Erro: "+e.getMessage(),"FALHA AO TENTAR REMOVER", 3);
        }
        
    }//GEN-LAST:event_btRemoverActionPerformed

    private void btRestaurarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btRestaurarActionPerformed
        //restaurar
	JPasswordField password = new JPasswordField(10);
	password.setEchoChar('*'); 
	JLabel rotulo = new JLabel("Entre com a senha:");
	JPanel entUsuario = new JPanel();
	entUsuario.add(rotulo);
	entUsuario.add(password);
	JOptionPane.showMessageDialog(null, entUsuario, "Nova senha", JOptionPane.PLAIN_MESSAGE);
	String senha = new String(password.getPassword());
        //JOptionPane.showMessageDialog(null,senha, "SENHA",3);// mostra a senha
        String cpf = txtCPF.getText().replace("-","");
        Pessoa pessoa = new Pessoa(txtNome.getText(),cpf.replace(".",""));
        pessoa.setDt_nasc(txtData.getText());
        pessoa.setSenha(senha);//cryptografar em breve
        int sexo = 0;
        if(txtSexo.getText() == "Feminino"){
            sexo = 1;
        }else if(txtSexo.getText() == "Masculino"){
            sexo = 2;
        }
        pessoa.setSexo(sexo);
        int tipo_papel = 0;
        if(txtFuncao.getText()=="Administrador"){
            tipo_papel = 1;
            pessoa.setTipo_papel(tipo_papel);
            DaoAdministrador da = new DaoAdministrador();
            if(da.estaConectado()){
                Administrador admin = new Administrador();
                admin.setPessoa(pessoa);
                if(txt1.getText()=="ADMINISTRADOR"){
                    admin.setNivel_hierarquia(1);
                }else if(txt1.getText()=="Admin. CHEFE"){
                    admin.setNivel_hierarquia(2);
                }
                da.insertAdmin(admin);
                JOptionPane.showMessageDialog(null,"Administrador restaurado com sucesso", "RESTAURAR",3);
            }
        }else if(txtFuncao.getText()=="Analista"){
            tipo_papel = 2;
            DaoAnalista da = new DaoAnalista();
            if(da.estaConectado()){
                Analista analista = new Analista();
                analista.setPessoa(pessoa);
                analista.setAnos_svc(Integer.parseInt(txt1.getText()));
                analista.setAvaliacao(Integer.parseInt(txt2.getText()));
                da.adicionar(analista);
                JOptionPane.showMessageDialog(null,"Analista restaurado com sucesso", "RESTAURAR",3);
            }
        }else if(txtFuncao.getText()=="Cliente"){
            tipo_papel = 3;
            DaoCliente dc = new DaoCliente();
            if(dc.estaConectado()){
                Cliente cliente = new Cliente();
                cliente.setPessoa(pessoa);
                cliente.setChamados_num(Integer.parseInt(txt2.getText()));
                cliente.setNvl_exp(Integer.parseInt(txt1.getText()));
                dc.adicionar(cliente);
                JOptionPane.showMessageDialog(null,"Cliente restaurado com sucesso", "RESTAURAR",3);
            }
        }
        
        
    }//GEN-LAST:event_btRestaurarActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btRemover;
    private javax.swing.JButton btRestaurar;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JScrollPane jScrollPane5;
    private javax.swing.JScrollPane jScrollPane6;
    private javax.swing.JLabel lb1;
    private javax.swing.JLabel lb2;
    private javax.swing.JTextPane txt1;
    private javax.swing.JTextPane txt2;
    private javax.swing.JFormattedTextField txtCPF;
    private javax.swing.JFormattedTextField txtData;
    private javax.swing.JTextPane txtFuncao;
    private javax.swing.JTextPane txtNome;
    private javax.swing.JTextPane txtSexo;
    // End of variables declaration//GEN-END:variables
}
